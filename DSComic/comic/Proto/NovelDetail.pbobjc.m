// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: novelDetail.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "NovelDetail.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(NovelDetailInfoResponse);
GPBObjCClassDeclaration(NovelDetailInfoVolumeResponse);

#pragma mark - NovelDetailRoot

@implementation NovelDetailRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - NovelDetailRoot_FileDescriptor

static GPBFileDescriptor *NovelDetailRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - NovelDetailResponse

@implementation NovelDetailResponse

@dynamic errnum;
@dynamic errmsg;
@dynamic hasData_p, data_p;

typedef struct NovelDetailResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t errnum;
  NSString *errmsg;
  NovelDetailInfoResponse *data_p;
} NovelDetailResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "errnum",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailResponse_FieldNumber_Errnum,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NovelDetailResponse__storage_, errnum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "errmsg",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailResponse_FieldNumber_Errmsg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NovelDetailResponse__storage_, errmsg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(NovelDetailInfoResponse),
        .number = NovelDetailResponse_FieldNumber_Data_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NovelDetailResponse__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NovelDetailResponse class]
                                     rootClass:[NovelDetailRoot class]
                                          file:NovelDetailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NovelDetailResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001F\000\002F\000\003\000Data\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NovelDetailInfoResponse

@implementation NovelDetailInfoResponse

@dynamic novelId;
@dynamic name;
@dynamic zone_p;
@dynamic status;
@dynamic lastUpdateVolumeName;
@dynamic lastUpdateChapterName;
@dynamic lastUpdateVolumeId;
@dynamic lastUpdateChapterId;
@dynamic lastUpdateTime;
@dynamic cover;
@dynamic hotHits;
@dynamic introduction;
@dynamic typesArray, typesArray_Count;
@dynamic authors;
@dynamic firstLetter;
@dynamic subscribeNum;
@dynamic redisUpdateTime;
@dynamic volumeArray, volumeArray_Count;

typedef struct NovelDetailInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t novelId;
  int32_t lastUpdateVolumeId;
  int32_t lastUpdateChapterId;
  int32_t hotHits;
  int32_t subscribeNum;
  NSString *name;
  NSString *zone_p;
  NSString *status;
  NSString *lastUpdateVolumeName;
  NSString *lastUpdateChapterName;
  NSString *cover;
  NSString *introduction;
  NSMutableArray *typesArray;
  NSString *authors;
  NSString *firstLetter;
  NSMutableArray *volumeArray;
  int64_t lastUpdateTime;
  int64_t redisUpdateTime;
} NovelDetailInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "novelId",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_NovelId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, novelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "zone_p",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Zone_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, zone_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Status,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastUpdateVolumeName",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_LastUpdateVolumeName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, lastUpdateVolumeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastUpdateChapterName",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_LastUpdateChapterName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, lastUpdateChapterName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastUpdateVolumeId",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_LastUpdateVolumeId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, lastUpdateVolumeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "lastUpdateChapterId",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_LastUpdateChapterId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, lastUpdateChapterId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "lastUpdateTime",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_LastUpdateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, lastUpdateTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "cover",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Cover,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, cover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hotHits",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_HotHits,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, hotHits),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "introduction",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Introduction,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, introduction),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "typesArray",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_TypesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, typesArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "authors",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_Authors,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, authors),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstLetter",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_FirstLetter,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, firstLetter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "subscribeNum",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_SubscribeNum,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, subscribeNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "redisUpdateTime",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoResponse_FieldNumber_RedisUpdateTime,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, redisUpdateTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "volumeArray",
        .dataTypeSpecific.clazz = GPBObjCClass(NovelDetailInfoVolumeResponse),
        .number = NovelDetailInfoResponse_FieldNumber_VolumeArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NovelDetailInfoResponse__storage_, volumeArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NovelDetailInfoResponse class]
                                     rootClass:[NovelDetailRoot class]
                                          file:NovelDetailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NovelDetailInfoResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\022\001G\000\002D\000\003\000Zone\000\004F\000\005T\000\006U\000\007R\000\010S\000\tN\000\nE\000\013G\000\014L"
        "\000\r\000Types\000\016G\000\017K\000\020L\000\021O\000\022\000Volume\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NovelDetailInfoVolumeResponse

@implementation NovelDetailInfoVolumeResponse

@dynamic volumeId;
@dynamic lnovelId;
@dynamic volumeName;
@dynamic volumeOrder;
@dynamic addtime;
@dynamic sumChapters;

typedef struct NovelDetailInfoVolumeResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t volumeId;
  int32_t lnovelId;
  int32_t volumeOrder;
  int32_t sumChapters;
  NSString *volumeName;
  int64_t addtime;
} NovelDetailInfoVolumeResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "volumeId",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_VolumeId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, volumeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "lnovelId",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_LnovelId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, lnovelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "volumeName",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_VolumeName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, volumeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "volumeOrder",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_VolumeOrder,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, volumeOrder),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "addtime",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_Addtime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, addtime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sumChapters",
        .dataTypeSpecific.clazz = Nil,
        .number = NovelDetailInfoVolumeResponse_FieldNumber_SumChapters,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(NovelDetailInfoVolumeResponse__storage_, sumChapters),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NovelDetailInfoVolumeResponse class]
                                     rootClass:[NovelDetailRoot class]
                                          file:NovelDetailRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NovelDetailInfoVolumeResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001H\000\002H\000\003J\000\004K\000\005G\000\006K\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
